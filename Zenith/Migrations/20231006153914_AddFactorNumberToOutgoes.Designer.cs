// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zenith.Data;

#nullable disable

namespace Zenith.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231006153914_AddFactorNumberToOutgoes")]
    partial class AddFactorNumberToOutgoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zenith.Models.Account", b =>
                {
                    b.Property<short>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("AccountId"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<float>("ChequeValue")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<float>("CreditValue")
                        .HasColumnType("real");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = (short)1,
                            Balance = 0f,
                            ChequeValue = 0f,
                            Comment = "",
                            CostCenter = 0,
                            CreditValue = 0f,
                            HasErrors = false,
                            Name = "Workshop Account"
                        },
                        new
                        {
                            AccountId = (short)2,
                            Balance = 0f,
                            ChequeValue = 0f,
                            Comment = "",
                            CostCenter = 1,
                            CreditValue = 0f,
                            HasErrors = false,
                            Name = "Transportation Account"
                        },
                        new
                        {
                            AccountId = (short)3,
                            Balance = 0f,
                            ChequeValue = 0f,
                            Comment = "",
                            CostCenter = 2,
                            CreditValue = 0f,
                            HasErrors = false,
                            Name = "Consumables Account"
                        });
                });

            modelBuilder.Entity("Zenith.Models.Buy", b =>
                {
                    b.Property<int>("BuyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.HasKey("BuyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Buys");
                });

            modelBuilder.Entity("Zenith.Models.BuyItem", b =>
                {
                    b.Property<long>("BuyItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BuyItemId"));

                    b.Property<int>("BuyCountUnit")
                        .HasColumnType("int");

                    b.Property<int>("BuyId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Count")
                        .HasColumnType("real");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("BuyItemId");

                    b.HasIndex("BuyId");

                    b.HasIndex("MaterialId");

                    b.ToTable("BuyItems");
                });

            modelBuilder.Entity("Zenith.Models.Cash", b =>
                {
                    b.Property<int>("CashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoneyTransactionType")
                        .HasColumnType("int");

                    b.Property<int>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TransferDirection")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("CashId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Cashes");
                });

            modelBuilder.Entity("Zenith.Models.Cheque", b =>
                {
                    b.Property<int>("ChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChequeId"));

                    b.Property<DateTime>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChequeState")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoneyTransactionType")
                        .HasColumnType("int");

                    b.Property<int>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TransferDirection")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("ChequeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("Zenith.Models.Company", b =>
                {
                    b.Property<short>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<float>("CreditValue")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("TaxRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Zenith.Models.Delivery", b =>
                {
                    b.Property<long>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DeliveryId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<float>("Count")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeliveryFee")
                        .HasColumnType("real");

                    b.Property<string>("DeliveryNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<long>("SaleItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("DriverId");

                    b.HasIndex("MachineId");

                    b.HasIndex("SaleItemId");

                    b.HasIndex("SiteId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("Zenith.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineId"));

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<float>("DefaultDeliveryFee")
                        .HasColumnType("real");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("MachineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Zenith.Models.MachineOutgo", b =>
                {
                    b.Property<int>("OutgoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutgoId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short?>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<short>("OutgoCategoryId")
                        .HasColumnType("smallint");

                    b.Property<int>("OutgoType")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("OutgoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OutgoCategoryId");

                    b.ToTable("MachineOutgoes");
                });

            modelBuilder.Entity("Zenith.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<float>("AvailableAmount")
                        .HasColumnType("real");

                    b.Property<float>("BuyPrice")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CommonBuyUnit")
                        .HasColumnType("int");

                    b.Property<int>("CommonSaleUnit")
                        .HasColumnType("int");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMixed")
                        .HasColumnType("bit");

                    b.Property<float>("MetersPerTon")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Zenith.Models.Mixture", b =>
                {
                    b.Property<int>("MixtureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MixtureId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommonSaleUnit")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RelatedMaterialId")
                        .HasColumnType("int");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real");

                    b.HasKey("MixtureId");

                    b.ToTable("Mixtures");
                });

            modelBuilder.Entity("Zenith.Models.MixtureItem", b =>
                {
                    b.Property<long>("MixtureItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MixtureItemId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("MixtureId")
                        .HasColumnType("int");

                    b.Property<short>("Percent")
                        .HasColumnType("smallint");

                    b.HasKey("MixtureItemId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MixtureId");

                    b.ToTable("MixtureItems");
                });

            modelBuilder.Entity("Zenith.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NotifyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotifyType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("NoteId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Zenith.Models.Outgo", b =>
                {
                    b.Property<int>("OutgoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutgoId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short?>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<short>("OutgoCategoryId")
                        .HasColumnType("smallint");

                    b.Property<int>("OutgoType")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("OutgoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OutgoCategoryId");

                    b.ToTable("Outgoes");
                });

            modelBuilder.Entity("Zenith.Models.OutgoCategory", b =>
                {
                    b.Property<short>("OutgoCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("OutgoCategoryId"));

                    b.Property<float>("ApproxPriceForEach")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("CountUnitTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<float>("ReservedAmount")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("OutgoCategoryId");

                    b.ToTable("OutgoCategories");
                });

            modelBuilder.Entity("Zenith.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Job")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Zenith.Models.PersonnelAbsence", b =>
                {
                    b.Property<int>("PersonnelAbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelAbsenceId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelAbsenceId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonnelAbsence");
                });

            modelBuilder.Entity("Zenith.Models.PersonnelOvertime", b =>
                {
                    b.Property<int>("PersonnelOvertimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelOvertimeId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelOvertimeId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonnelOvertime");
                });

            modelBuilder.Entity("Zenith.Models.SalaryPayment", b =>
                {
                    b.Property<int>("SalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryPaymentId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<float>("PaidValue")
                        .HasColumnType("real");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("SalaryPaymentId");

                    b.HasIndex("PersonId");

                    b.ToTable("SalaryPayments");
                });

            modelBuilder.Entity("Zenith.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.HasKey("SaleId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Zenith.Models.SaleItem", b =>
                {
                    b.Property<long>("SaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SaleItemId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Count")
                        .HasColumnType("real");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("MixtureMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("SaleCountUnit")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("SaleItemId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("Zenith.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("SiteId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Zenith.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            CreateDateTime = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            HasErrors = false,
                            HashedPassword = "b9bcda38c0de9edcda3b12bc5d91de5959e2de031a1fcc13a3860d9c39eeb3b2"
                        });
                });

            modelBuilder.Entity("Zenith.Models.UserPermission", b =>
                {
                    b.Property<int>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPermissionId"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<bool>("HasErrors")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("UserPermissionId");

                    b.HasIndex("Username");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("Zenith.Models.Buy", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Zenith.Models.BuyItem", b =>
                {
                    b.HasOne("Zenith.Models.Buy", "Buy")
                        .WithMany("Items")
                        .HasForeignKey("BuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buy");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Zenith.Models.Cash", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Zenith.Models.Cheque", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Zenith.Models.Delivery", b =>
                {
                    b.HasOne("Zenith.Models.Person", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.SaleItem", "SaleItem")
                        .WithMany("Deliveries")
                        .HasForeignKey("SaleItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.Site", "Site")
                        .WithMany("Deliveries")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Machine");

                    b.Navigation("SaleItem");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Zenith.Models.MachineOutgo", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Zenith.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.OutgoCategory", "OutgoCategory")
                        .WithMany()
                        .HasForeignKey("OutgoCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Machine");

                    b.Navigation("OutgoCategory");
                });

            modelBuilder.Entity("Zenith.Models.MixtureItem", b =>
                {
                    b.HasOne("Zenith.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.Mixture", "Mixture")
                        .WithMany("Items")
                        .HasForeignKey("MixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Mixture");
                });

            modelBuilder.Entity("Zenith.Models.Outgo", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Zenith.Models.OutgoCategory", "OutgoCategory")
                        .WithMany()
                        .HasForeignKey("OutgoCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("OutgoCategory");
                });

            modelBuilder.Entity("Zenith.Models.PersonnelAbsence", b =>
                {
                    b.HasOne("Zenith.Models.Person", "Person")
                        .WithMany("PersonnelAbsences")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zenith.Models.PersonnelOvertime", b =>
                {
                    b.HasOne("Zenith.Models.Person", "Person")
                        .WithMany("PersonnelOvertimes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Zenith.Models.SalaryPayment", b =>
                {
                    b.HasOne("Zenith.Models.Person", "Personnel")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("Zenith.Models.Sale", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Zenith.Models.SaleItem", b =>
                {
                    b.HasOne("Zenith.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zenith.Models.Sale", "Sale")
                        .WithMany("Items")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Zenith.Models.Site", b =>
                {
                    b.HasOne("Zenith.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Zenith.Models.UserPermission", b =>
                {
                    b.HasOne("Zenith.Models.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zenith.Models.Buy", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Zenith.Models.Mixture", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Zenith.Models.Person", b =>
                {
                    b.Navigation("PersonnelAbsences");

                    b.Navigation("PersonnelOvertimes");
                });

            modelBuilder.Entity("Zenith.Models.Sale", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Zenith.Models.SaleItem", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("Zenith.Models.Site", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("Zenith.Models.User", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
